var FFI = require('ffi-napi'),
    ArrayType = require('ref-array'),
    Struct = require('ref-struct'),
    ref = require('ref');

var voidPtr = ref.refType(ref.types.void);

exports.CONSTANTS = {
  '': {
      pdf_uni_none: 0,
      pdf_uni_utf8: 5,
      pdf_uni_utf16: 7,
      pdf_uni_utf16be: 8,
      pdf_uni_utf16le: 9,
      pdf_uni_utf32: 10,
      '0': 'pdf_uni_none',
      '5': 'pdf_uni_utf8',
      '7': 'pdf_uni_utf16',
      '8': 'pdf_uni_utf16be',
      '9': 'pdf_uni_utf16le',
      '10': 'pdf_uni_utf32',
  },
};

exports.DEFINES = {
  a0_width:   2380.0,
  a0_height:   3368.0,
  a1_width:   1684.0,
  a1_height:   2380.0,
  a2_width:   1190.0,
  a2_height:   1684.0,
  a3_width:   842.0,
  a3_height:   1190.0,
  a4_width:   595.0,
  a4_height:   842.0,
  a5_width:   421.0,
  a5_height:   595.0,
  a6_width:   297.0,
  a6_height:   421.0,
  b5_width:   501.0,
  b5_height:   709.0,
  letter_width:   612.0,
  letter_height:   792.0,
  legal_width:    612.0,
  legal_height:    1008.0,
  ledger_width:   1224.0,
  ledger_height:   792.0,
  p11x17_width:   792.0,
  p11x17_height:   1224.0
};

var FILE = exports.FILE = voidPtr;
var FILEPtr = exports.FILEPtr = ref.refType(FILE);
var fpos_t = exports.fpos_t = Struct({
  __darwin_off_t: ref.types.longlong,
});
var fpos_tPtr = exports.fpos_tPtr = ref.refType(fpos_t);
var size_t = exports.size_t = Struct({
  __darwin_size_t: ref.types.ulong,
});
var size_tPtr = exports.size_tPtr = ref.refType(size_t);
var PDF = exports.PDF = voidPtr;
var PDFPtr = exports.PDFPtr = ref.refType(PDF);
var writeproc_t = exports.writeproc_t = FFI.Function(ref.types.ulong, [
  voidPtr,
  voidPtr,
  ref.types.ulong,
]);
var writeproc_tPtr = exports.writeproc_tPtr = ref.refType(writeproc_t);
var PDFlib_api_s = exports.PDFlib_api_s = Struct({
  sizeof_PDFlib_api: ref.types.ulong,
  major: ref.types.int32,
  minor: ref.types.int32,
  revision: ref.types.int32,
  reserved: ref.types.int32,
  PDF_activate_item: voidPtr,
  PDF_add_bookmark: voidPtr,
  PDF_add_bookmark2: voidPtr,
  PDF_add_launchlink: voidPtr,
  PDF_add_locallink: voidPtr,
  PDF_add_nameddest: voidPtr,
  PDF_add_note: voidPtr,
  PDF_add_note2: voidPtr,
  PDF_add_path_point: voidPtr,
  PDF_add_pdflink: voidPtr,
  PDF_add_portfolio_file: voidPtr,
  PDF_add_portfolio_folder: voidPtr,
  PDF_add_table_cell: voidPtr,
  PDF_add_textflow: voidPtr,
  PDF_add_thumbnail: voidPtr,
  PDF_add_weblink: voidPtr,
  PDF_align: voidPtr,
  PDF_arc: voidPtr,
  PDF_arcn: voidPtr,
  PDF_attach_file: voidPtr,
  PDF_attach_file2: voidPtr,
  PDF_begin_document: voidPtr,
  PDF_begin_document_callback: voidPtr,
  PDF_begin_dpart: voidPtr,
  PDF_begin_font: voidPtr,
  PDF_begin_glyph: voidPtr,
  PDF_begin_glyph_ext: voidPtr,
  PDF_begin_item: voidPtr,
  PDF_begin_layer: voidPtr,
  PDF_begin_mc: voidPtr,
  PDF_begin_page: voidPtr,
  PDF_begin_page_ext: voidPtr,
  PDF_begin_pattern: voidPtr,
  PDF_begin_pattern_ext: voidPtr,
  PDF_begin_template: voidPtr,
  PDF_begin_template_ext: voidPtr,
  PDF_boot: voidPtr,
  PDF_check_context: voidPtr,
  PDF_circle: voidPtr,
  PDF_circular_arc: voidPtr,
  PDF_clip: voidPtr,
  PDF_close: voidPtr,
  PDF_close_font: voidPtr,
  PDF_close_graphics: voidPtr,
  PDF_close_image: voidPtr,
  PDF_close_pdi: voidPtr,
  PDF_close_pdi_document: voidPtr,
  PDF_close_pdi_page: voidPtr,
  PDF_closepath: voidPtr,
  PDF_closepath_fill_stroke: voidPtr,
  PDF_closepath_stroke: voidPtr,
  PDF_concat: voidPtr,
  PDF_continue_text: voidPtr,
  PDF_continue_text2: voidPtr,
  PDF_convert_to_unicode: voidPtr,
  PDF_create_3dview: voidPtr,
  PDF_create_action: voidPtr,
  PDF_create_annotation: voidPtr,
  PDF_create_bookmark: voidPtr,
  PDF_create_devicen: voidPtr,
  PDF_create_field: voidPtr,
  PDF_create_fieldgroup: voidPtr,
  PDF_create_gstate: voidPtr,
  PDF_create_pvf: voidPtr,
  PDF_create_textflow: voidPtr,
  PDF_curveto: voidPtr,
  PDF_define_layer: voidPtr,
  PDF_deflate_unicode: voidPtr,
  PDF_delete: voidPtr,
  PDF_delete_path: voidPtr,
  PDF_delete_pvf: voidPtr,
  PDF_delete_table: voidPtr,
  PDF_delete_textflow: voidPtr,
  PDF_draw_path: voidPtr,
  PDF_ellipse: voidPtr,
  PDF_elliptical_arc: voidPtr,
  PDF_encoding_set_char: voidPtr,
  PDF_end_document: voidPtr,
  PDF_end_dpart: voidPtr,
  PDF_end_font: voidPtr,
  PDF_end_glyph: voidPtr,
  PDF_end_item: voidPtr,
  PDF_end_layer: voidPtr,
  PDF_end_mc: voidPtr,
  PDF_end_page: voidPtr,
  PDF_end_page_ext: voidPtr,
  PDF_end_pattern: voidPtr,
  PDF_end_template: voidPtr,
  PDF_end_template_ext: voidPtr,
  PDF_endpath: voidPtr,
  PDF_fill: voidPtr,
  PDF_fill_graphicsblock: voidPtr,
  PDF_fill_imageblock: voidPtr,
  PDF_fill_pdfblock: voidPtr,
  PDF_fill_stroke: voidPtr,
  PDF_fill_textblock: voidPtr,
  PDF_findfont: voidPtr,
  PDF_fit_graphics: voidPtr,
  PDF_fit_image: voidPtr,
  PDF_fit_pdi_page: voidPtr,
  PDF_fit_table: voidPtr,
  PDF_fit_textflow: voidPtr,
  PDF_fit_textline: voidPtr,
  PDF_get_api: voidPtr,
  PDF_get_apiname: voidPtr,
  PDF_get_buffer: voidPtr,
  PDF_get_errmsg: voidPtr,
  PDF_get_errnum: voidPtr,
  PDF_get_minorversion: voidPtr,
  PDF_get_majorversion: voidPtr,
  PDF_get_opaque: voidPtr,
  PDF_get_option: voidPtr,
  PDF_get_parameter: voidPtr,
  PDF_get_pdi_parameter: voidPtr,
  PDF_get_pdi_value: voidPtr,
  PDF_get_string: voidPtr,
  PDF_get_unicode_format: voidPtr,
  PDF_get_value: voidPtr,
  PDF_info_font: voidPtr,
  PDF_info_graphics: voidPtr,
  PDF_info_image: voidPtr,
  PDF_info_matchbox: voidPtr,
  PDF_info_path: voidPtr,
  PDF_info_pdi_page: voidPtr,
  PDF_info_pvf: voidPtr,
  PDF_info_table: voidPtr,
  PDF_info_textflow: voidPtr,
  PDF_info_textline: voidPtr,
  PDF_initgraphics: voidPtr,
  PDF_lineto: voidPtr,
  PDF_load_3ddata: voidPtr,
  PDF_load_asset: voidPtr,
  PDF_load_font: voidPtr,
  PDF_load_graphics: voidPtr,
  PDF_load_iccprofile: voidPtr,
  PDF_load_image: voidPtr,
  PDF_makespotcolor: voidPtr,
  PDF_mc_point: voidPtr,
  PDF_moveto: voidPtr,
  PDF_new: voidPtr,
  PDF_new2: voidPtr,
  PDF_open_CCITT: voidPtr,
  PDF_open_file: voidPtr,
  PDF_open_image: voidPtr,
  PDF_open_image_file: voidPtr,
  PDF_open_mem: voidPtr,
  PDF_open_pdi: voidPtr,
  PDF_open_pdi_callback: voidPtr,
  PDF_open_pdi_document: voidPtr,
  PDF_open_pdi_page: voidPtr,
  PDF_pcos_get_number: voidPtr,
  PDF_pcos_get_stream: voidPtr,
  PDF_pcos_get_string: voidPtr,
  PDF_place_image: voidPtr,
  PDF_place_pdi_page: voidPtr,
  PDF_poca_delete: voidPtr,
  PDF_poca_insert: voidPtr,
  PDF_poca_new: voidPtr,
  PDF_poca_remove: voidPtr,
  PDF_process_pdi: voidPtr,
  PDF_rect: voidPtr,
  PDF_set_textflow_variable: voidPtr,
  PDF_restore: voidPtr,
  PDF_resume_page: voidPtr,
  PDF_rotate: voidPtr,
  PDF_save: voidPtr,
  PDF_scale: voidPtr,
  PDF_set_border_color: voidPtr,
  PDF_set_border_dash: voidPtr,
  PDF_set_border_style: voidPtr,
  PDF_set_graphics_option: voidPtr,
  PDF_set_gstate: voidPtr,
  PDF_set_info: voidPtr,
  PDF_set_info2: voidPtr,
  PDF_set_layer_dependency: voidPtr,
  PDF_set_option: voidPtr,
  PDF_set_parameter: voidPtr,
  PDF_set_text_option: voidPtr,
  PDF_set_text_pos: voidPtr,
  PDF_set_value: voidPtr,
  PDF_setcolor: voidPtr,
  PDF_setdash: voidPtr,
  PDF_setdashpattern: voidPtr,
  PDF_setflat: voidPtr,
  PDF_setfont: voidPtr,
  PDF_setgray: voidPtr,
  PDF_setgray_fill: voidPtr,
  PDF_setgray_stroke: voidPtr,
  PDF_setlinecap: voidPtr,
  PDF_setlinejoin: voidPtr,
  PDF_setlinewidth: voidPtr,
  PDF_setmatrix: voidPtr,
  PDF_setmiterlimit: voidPtr,
  PDF_setpolydash: voidPtr,
  PDF_setrgbcolor: voidPtr,
  PDF_setrgbcolor_fill: voidPtr,
  PDF_setrgbcolor_stroke: voidPtr,
  PDF_shading: voidPtr,
  PDF_shading_pattern: voidPtr,
  PDF_shfill: voidPtr,
  PDF_show: voidPtr,
  PDF_show2: voidPtr,
  PDF_show_boxed: voidPtr,
  PDF_show_boxed2: voidPtr,
  PDF_show_xy: voidPtr,
  PDF_show_xy2: voidPtr,
  PDF_shutdown: voidPtr,
  PDF_skew: voidPtr,
  PDF_stringwidth: voidPtr,
  PDF_stringwidth2: voidPtr,
  PDF_stroke: voidPtr,
  PDF_suspend_page: voidPtr,
  PDF_translate: voidPtr,
  PDF_utf16_to_utf8: voidPtr,
  PDF_utf8_to_utf16: voidPtr,
  PDF_utf32_to_utf8: voidPtr,
  PDF_utf8_to_utf32: voidPtr,
  PDF_utf16_to_utf32: voidPtr,
  PDF_utf32_to_utf16: voidPtr,
  PDF_xshow: voidPtr,
  pdf_catch: voidPtr,
  pdf_exit_try: voidPtr,
  pdf_jbuf: voidPtr,
  pdf_rethrow: voidPtr,
});
var PDFlib_api_sPtr = exports.PDFlib_api_sPtr = ref.refType(PDFlib_api_s);
var PDFlib_api = exports.PDFlib_api = Struct({
  PDFlib_api_s: PDFlib_api_s,
});
var PDFlib_apiPtr = exports.PDFlib_apiPtr = ref.refType(PDFlib_api);
var errorproc_t = exports.errorproc_t = FFI.Function(ref.types.void, [
  voidPtr,
  ref.types.int32,
  ref.types.CString,
]);
var errorproc_tPtr = exports.errorproc_tPtr = ref.refType(errorproc_t);
var allocproc_t = exports.allocproc_t = FFI.Function(voidPtr, [
  voidPtr,
  ref.types.ulong,
  ref.types.CString,
]);
var allocproc_tPtr = exports.allocproc_tPtr = ref.refType(allocproc_t);
var reallocproc_t = exports.reallocproc_t = FFI.Function(voidPtr, [
  voidPtr,
  voidPtr,
  ref.types.ulong,
  ref.types.CString,
]);
var reallocproc_tPtr = exports.reallocproc_tPtr = ref.refType(reallocproc_t);
var freeproc_t = exports.freeproc_t = FFI.Function(ref.types.void, [
  voidPtr,
  voidPtr,
]);
var freeproc_tPtr = exports.freeproc_tPtr = ref.refType(freeproc_t);
var pdf_jmpbuf = exports.pdf_jmpbuf = Struct({
  jbuf: ArrayType(ref.types.int32, 37),
});
var pdf_jmpbufPtr = exports.pdf_jmpbufPtr = ref.refType(pdf_jmpbuf);

exports.pdflib = new FFI.Library('libpdf', {
  PDF_activate_item: [ref.types.void, [
    PDF,
    ref.types.int32,
  ]],
  PDF_add_bookmark: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.int32,
  ]],
  PDF_add_bookmark2: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
  ]],
  PDF_add_launchlink: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_add_locallink: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_add_nameddest: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_add_note: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
    ref.types.CString,
    ref.types.CString,
    ref.types.int32,
  ]],
  PDF_add_note2: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
  ]],
  PDF_add_path_point: [ref.types.int32, [
    PDFPtr,
    ref.types.int32,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_add_pdflink: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_add_portfolio_file: [ref.types.int32, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_add_portfolio_folder: [ref.types.int32, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_add_table_cell: [ref.types.int32, [
    PDFPtr,
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_add_textflow: [ref.types.int32, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_add_thumbnail: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_add_weblink: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_align: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_arc: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_arcn: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_attach_file: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
    ref.types.CString,
    ref.types.CString,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_attach_file2: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_begin_document: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_begin_document_callback: [ref.types.void, [
    PDFPtr,
    writeproc_t,
    ref.types.CString,
  ]],
  PDF_begin_dpart: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_begin_font: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_begin_glyph: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_begin_glyph_ext: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_begin_item: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_begin_layer: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_begin_mc: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_begin_page: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_begin_page_ext: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_begin_pattern: [ref.types.int32, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.int32,
  ]],
  PDF_begin_pattern_ext: [ref.types.int32, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_begin_template: [ref.types.int32, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_begin_template_ext: [ref.types.int32, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_boot: [ref.types.void, [
  ]],
  PDF_check_context: [ref.types.int32, [
    PDFPtr,
  ]],
  PDF_circle: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_circular_arc: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_clip: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_close: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_close_font: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_close_graphics: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_close_image: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_close_pdi: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_close_pdi_document: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_close_pdi_page: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_closepath: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_closepath_fill_stroke: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_closepath_stroke: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_concat: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_continue_text: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_continue_text2: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
  ]],
  PDF_convert_to_unicode: [ref.types.CString, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
    ref.types.int32,
    ref.refType(ref.types.int32),
    ref.types.CString,
  ]],
  PDF_create_3dview: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_create_action: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_create_annotation: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_create_bookmark: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_create_devicen: [ref.types.int32, [
    PDFPtr,
    ref.types.CString
  ]],
  PDF_create_field: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_create_fieldgroup: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_create_gstate: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_create_pvf: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    voidPtr,
    ref.types.ulong,
    ref.types.CString,
  ]],
  PDF_create_textflow: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_curveto: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_define_layer: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_deflate_unicode: [ref.types.CString, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  PDF_delete: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_delete_path: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_delete_pvf: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
  ]],
  PDF_delete_table: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_delete_textflow: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_draw_path: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_ellipse: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_elliptical_arc: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_encoding_set_char: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
  ]],
  PDF_end_document: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_end_dpart: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_end_font: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_end_glyph: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_end_item: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_end_layer: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_end_mc: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_end_page: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_end_page_ext: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_end_pattern: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_end_template: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_end_template_ext: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_endpath: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_fill: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_fill_graphicsblock: [ref.types.int32, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_fill_imageblock: [ref.types.int32, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_fill_pdfblock: [ref.types.int32, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_fill_stroke: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_fill_textblock: [ref.types.int32, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_findfont: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
    ref.types.int32,
  ]],
  PDF_fit_graphics: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_fit_image: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_fit_pdi_page: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_fit_table: [ref.types.CString, [
    PDFPtr,
    ref.types.int32,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_fit_textflow: [ref.types.CString, [
    PDFPtr,
    ref.types.int32,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_fit_textline: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_get_api: [PDFlib_apiPtr, [
  ]],
  PDF_get_apiname: [ref.types.CString, [
    PDFPtr,
  ]],
  PDF_get_buffer: [ref.types.CString, [
    PDFPtr,
    ref.refType(ref.types.long),
  ]],
  PDF_get_errmsg: [ref.types.CString, [
    PDFPtr,
  ]],
  PDF_get_errnum: [ref.types.int32, [
    PDFPtr,
  ]],
  PDF_get_kern_amount: [ref.types.double, [
    PDFPtr,
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
  ]],
  PDF_get_majorversion: [ref.types.int32, [
  ]],
  PDF_get_minorversion: [ref.types.int32, [
  ]],
  PDF_get_opaque: [voidPtr, [
    PDFPtr,
  ]],
  PDF_get_option: [ref.types.double, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_get_parameter: [ref.types.CString, [
    PDFPtr,
    ref.types.CString,
    ref.types.double,
  ]],
  PDF_get_pdi_parameter: [ref.types.CString, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  PDF_get_pdi_value: [ref.types.double, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
  ]],
  PDF_get_string: [ref.types.CString, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_get_unicode_format: [ref.types.uint32, [
    PDFPtr,
  ]],
  PDF_get_value: [ref.types.double, [
    PDFPtr,
    ref.types.CString,
    ref.types.double,
  ]],
  PDF_info_font: [ref.types.double, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_info_graphics: [ref.types.double, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_info_image: [ref.types.double, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_info_matchbox: [ref.types.double, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_info_path: [ref.types.double, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_info_pdi_page: [ref.types.double, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_info_pvf: [ref.types.double, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_info_table: [ref.types.double, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_info_textflow: [ref.types.double, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_info_textline: [ref.types.double, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_initgraphics: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_lineto: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_load_3ddata: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_load_asset: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_load_font: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_load_graphics: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_load_iccprofile: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_load_image: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_makespotcolor: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
  ]],
  PDF_mc_point: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_moveto: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_new: [PDFPtr, [
  ]],
  PDF_new2: [PDFPtr, [
    errorproc_t,
    allocproc_t,
    reallocproc_t,
    freeproc_t,
    voidPtr,
  ]],
  PDF_open_CCITT: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
  ]],
  PDF_open_file: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_open_image: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
    ref.types.CString,
    ref.types.long,
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_open_image_file: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
    ref.types.CString,
    ref.types.int32,
  ]],
  PDF_open_mem: [ref.types.void, [
    PDFPtr,
    writeproc_t,
  ]],
  PDF_open_pdi: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
    ref.types.int32,
  ]],
  PDF_open_pdi_document: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_open_pdi_callback: [ref.types.int32, [
    PDFPtr,
    voidPtr,
    ref.types.ulong,
    voidPtr,
    voidPtr,
    ref.types.CString,
  ]],
  PDF_open_pdi_page: [ref.types.int32, [
    PDFPtr,
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_pcos_get_number: [ref.types.double, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_pcos_get_string: [ref.types.CString, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_pcos_get_stream: [ref.refType(ref.types.uchar), [
    PDFPtr,
    ref.types.int32,
    ref.refType(ref.types.int32),
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_place_image: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_place_pdi_page: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_poca_delete: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_poca_insert: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_poca_new: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_poca_remove: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_process_pdi: [ref.types.int32, [
    PDFPtr,
    ref.types.int32,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_rcurveto: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_rect: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_restore: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_resume_page: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_rlineto: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_rmoveto: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_rotate: [ref.types.void, [
    PDFPtr,
    ref.types.double,
  ]],
  PDF_save: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_scale: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_set_border_color: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_set_border_dash: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_set_border_style: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.double,
  ]],
  PDF_set_graphics_option: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_set_gstate: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_set_info: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_set_info2: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
    ref.types.int32,
  ]],
  PDF_set_layer_dependency: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_set_option: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_set_parameter: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_set_text_option: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_set_text_pos: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_set_textflow_variable: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_set_value: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.double,
  ]],
  PDF_setcolor: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_setdash: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_setdashpattern: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_setflat: [ref.types.void, [
    PDFPtr,
    ref.types.double,
  ]],
  PDF_setfont: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
    ref.types.double,
  ]],
  PDF_setgray: [ref.types.void, [
    PDFPtr,
    ref.types.double,
  ]],
  PDF_setgray_fill: [ref.types.void, [
    PDFPtr,
    ref.types.double,
  ]],
  PDF_setgray_stroke: [ref.types.void, [
    PDFPtr,
    ref.types.double,
  ]],
  PDF_setlinecap: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_setlinejoin: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_setlinewidth: [ref.types.void, [
    PDFPtr,
    ref.types.double,
  ]],
  PDF_setmatrix: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_setmiterlimit: [ref.types.void, [
    PDFPtr,
    ref.types.double,
  ]],
  PDF_setpolydash: [ref.types.void, [
    PDFPtr,
    ref.refType(ref.types.float),
    ref.types.int32,
  ]],
  PDF_setrgbcolor: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_setrgbcolor_fill: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_setrgbcolor_stroke: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_shading: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
  ]],
  PDF_shading_pattern: [ref.types.int32, [
    PDFPtr,
    ref.types.int32,
    ref.types.CString,
  ]],
  PDF_shfill: [ref.types.void, [
    PDFPtr,
    ref.types.int32,
  ]],
  PDF_show: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_show2: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
  ]],
  PDF_show_boxed: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_show_boxed2: [ref.types.int32, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.double,
    ref.types.CString,
    ref.types.CString,
  ]],
  PDF_show_xy: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_show_xy2: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_shutdown: [ref.types.void, [
  ]],
  PDF_skew: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_stringwidth: [ref.types.double, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.double,
  ]],
  PDF_stringwidth2: [ref.types.double, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.int32,
    ref.types.double,
  ]],
  PDF_stroke: [ref.types.void, [
    PDFPtr,
  ]],
  PDF_suspend_page: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
  ]],
  PDF_translate: [ref.types.void, [
    PDFPtr,
    ref.types.double,
    ref.types.double,
  ]],
  PDF_utf16_to_utf8: [ref.types.CString, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  PDF_utf8_to_utf16: [ref.types.CString, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
    ref.refType(ref.types.int32),
  ]],
  PDF_utf32_to_utf8: [ref.types.CString, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.refType(ref.types.int32),
  ]],
  PDF_utf8_to_utf32: [ref.types.CString, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
    ref.refType(ref.types.int32),
  ]],
  PDF_utf16_to_utf32: [ref.types.CString, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.int32),
  ]],
  PDF_utf32_to_utf16: [ref.types.CString, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.types.CString,
    ref.refType(ref.types.int32),
  ]],
  PDF_xshow: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.int32,
    ref.refType(ref.types.double),
  ]],
  pdf_jbuf: [pdf_jmpbufPtr, [
    PDFPtr,
  ]],
  pdf_exit_try: [ref.types.void, [
    PDFPtr,
  ]],
  pdf_catch: [ref.types.int32, [
    PDFPtr,
  ]],
  pdf_rethrow: [ref.types.void, [
    PDFPtr,
  ]],
  pdf_throw: [ref.types.void, [
    PDFPtr,
    ref.types.CString,
    ref.types.CString,
    ref.types.CString,
  ]],
});

